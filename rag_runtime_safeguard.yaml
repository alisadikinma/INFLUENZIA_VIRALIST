# RAG Runtime Safeguard Configuration
# Version: 3.8.1
# Converted from: RAG_RUNTIME_SAFEGUARD.md
# Purpose: Runtime safety validation and cultural protection protocols

version: "3.8.1"
pattern_ref_prefix: "!RAG_RUNTIME_SAFEGUARD"
compiled_from:
  - "Legacy safeguard protocols"
  - "Cultural sensitivity enhancements"

module_registration:
  id: "runtime_safeguard"
  role: "prevention_engine"
  activated_by: ["hallucination_block", "flush_protocol"]

registered_modules:
  - originality_guard
  - structure_language_enforcer
  
# === RUNTIME SAFEGUARD RULES ===
ruleset:
  hallucination_block:
    enabled: true
    trigger_keywords:
      - "quantum time travel"
      - "psychic future self"
  visual_constraints:
    forbidden_visual_elements:
      - "two characters interacting physically"
      - "high-five"
      - "handshake"
      - "hug"
      - "fine object manipulation"
      - "pick up coin"
      - "text on screen clearly legible"
      - "typing on keyboard close-up"
      - "extended continuous movement"
      - "over 10s continuous camera shot"
    visual_guard_enforced: true
    on_violation:
      - "Regenerate prompt with safe fallback"
      - "Notify user: prompt violated KlingAI constraints"

# PATCH INSTRUCTIONS FOR rag_runtime_safeguard.yaml
# Version: v3.7.0 → v3.8.0
# Enhancement: Advanced Fact Checking & Verification
# ===== STEP 1: ADD AFTER line ~15 (after visual_constraints section) =====
# INSERT THIS ENTIRE SECTION:

enhanced_fact_verification:
  enabled: true
  on_hoax: "fallback_override_handler"
  on_uncertain: "proceed_with_disclaimer"
  outputs:
    verification_status_with_confidence_score: "${status_label} (${confidence}/100)"
    fact_verification_score: "${confidence}"

# ===== STEP 2: UPDATE existing fact_check_filter section =====

# fact_check_filter:
#  module_id: "legacy_fact_check_filter"
#  enabled: false  # Disabled in favor of enhanced_fact_verification
#  deprecated: "replaced_by_enhanced_fact_verification"
#  function: "legacy_basic_fact_checking_replaced"

# ===== STEP 3: ADD integration section at end of file =====
# ADD BEFORE the last line:

enhanced_verification_integration:
  module_dependencies:
    blocks_if_hoax: ["rag_deep_research_engine", "rag_core_modules", "script_generation"]
    proceeds_if_verified: "all_downstream_modules"
    proceeds_with_disclaimer: "all_downstream_modules_with_uncertainty_flag"
  
  handoff_protocols:
    to_research_engine: "verified_content_becomes_research_foundation"
    to_script_generation: "verification_status_included_in_final_output"
    to_user_interaction: "transparent_verification_process_communication"

validation_tags:
  - "enhanced_fact_verification_active"
  - "hoax_detection_enabled"
  - "multi_source_verification_required"
  - "user_education_on_hoax_enabled"
  
# ===== CULTURAL SENSITIVITY PROTOCOLS =====

TOPIC_VALIDATOR:
  input_fields: ["title", "HOOK"]
  ambiguity_threshold: 0.75
  action_if_ambiguous: "fallback_to_default_fusion"
  log_action: true

fallback_override_handler:
  # Keep it simple and actionable; map trigger -> action
  triggers:
    structure_violation: regenerate_once # format / language issues from enforcer
    emotion_flat: boost_emotion_glide    # nudge the glide profile
    style_clash: recompute_style_weights # re-resolve style via fusion strategy
    low_confidence: add_disclaimer       # keep the fact, add qualifier
    hallucination: educational_correction  # replace with grounded explanation
  # If multiple triggers fire, apply in this order
  priority_order: ["structure_violation", "hallucination", "low_confidence", "style_clash", "emotion_flat"]

originality_guard:
  enabled: true
  similarity_threshold: 0.75
  on_trigger: "auto_regenerate_with_variation"
  
  checks:
    - ngram_overlap: { n: 5, max_ratio: 0.22 }      # ≤22% 5-gram reuse
    - phrase_reuse_limit: { max_reused_phrases: 2 } # frasa khas sama ≤2x
    - internal_history_compare: { window: 50 }  # bandingkan 50 output terakhir
  outputs:
    originality_score: "${originality_score}"    # diekspos untuk QA ringan
  on_trigger: "auto_regenerate_with_variation" # konsisten penamaan runtime
  regenerate_policy:
    constraints:
      - preserve_verified_facts
      - keep_structure_but_change_wording_examples_angles
      - vary_hook_angle_or_cta_wording
    max_attempts: 1
   
structure_language_enforcer:
  enabled: true
  enforce_cinegenix_format: true     # hard gate on the template
  forbid_yaml_output: true           # never output YAML in the final result
  allow_script_lang: ["ID"]          # force Indonesian; use uppercase to match system prompt
  # Validate presence and order of emoji markers used by CINEGENIX
  require_fields_in_order: ["Title", "⏱️", "🎥", "🎙️", "😲", "🎬"]
  # Optional: microblock ID must exist and be formatted
  microblock_id_regex: "\\*ID:[^*]+\\*"   # ensures *ID:{microblock_id}* appears
  # Helpful mapping for downstream tools; keep it (it’s lightweight and practical)
  map_emoji_to_fields:
    "⏱️": "timestamp_range"
    "🎥": "visual_direction"
    "🎙️": "script"
    "😲": "emotional_label"
    "🎬": "scene_transition"
  # What to do when format/language checks fail
  on_violation: regenerate_once

validator_yaml_bridge:
  enforce_output_structure_language: true
  allowed_languages:
    - structure: "en"
    - script: "id"